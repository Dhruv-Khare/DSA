class Solution {
public:
void countingSort(vector<int> &nums,int n,int k)
{
    vector<int> c(k+1,0);
vector<int> b(n);
  for(int i=0;i<n;i++)
  {
    c[nums[i]]++;
  }
 for(int i=1;i<=k;i++)
    {
      c[i]=c[i]+c[i-1];
    }
    for(int j=n-1;j>0;j--)
    {
       b[c[nums[j]]-1]=nums[j];
       c[nums[j]]--;
    }
}
int noOfDigit(int n)
{
    int c=0;
    while(n!=0)
    {
        c++;
        n=n/10;
    }
    return c;
}
    vector<int> sortArray(vector<int>& nums) {
        int d=noOfdigit(nums[i]);
        int k=*max_element(nums.begin(),nums.end());
        int n=nums.size();
        for(int i=1;i<=d;i++)
        {
            countingSort(nums,n,k);
        }
        return nums;
        
    }
};